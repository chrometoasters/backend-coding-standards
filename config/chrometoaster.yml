imports:
    - { resource: 'psr12.yml' }

services:
    Chrometoaster\CodingStandard\Fixer\ClassNotation\ConfigurableClassAttributesSeparationFixer:
        elementsSeparationLines: 1
        methodsSeparationLines: 2

    PHP_CodeSniffer\Standards\Generic\Sniffs\Classes\DuplicateClassNameSniff: ~
    PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\EmptyStatementSniff: ~
    PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\ForLoopShouldBeWhileLoopSniff: ~
    PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\JumbledIncrementerSniff: ~
    PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\UnconditionalIfStatementSniff: ~
    PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\UnnecessaryFinalModifierSniff: ~
    PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\UselessOverridingMethodSniff: ~
    PHP_CodeSniffer\Standards\Generic\Sniffs\Commenting\DocCommentSniff: ~
    PHP_CodeSniffer\Standards\Generic\Sniffs\Files\LineLengthSniff:
        absoluteLineLimit: 0
        lineLimit: 120
    PHP_CodeSniffer\Standards\Generic\Sniffs\Files\OneClassPerFileSniff: ~
    PHP_CodeSniffer\Standards\Generic\Sniffs\Files\OneInterfacePerFileSniff: ~
    PHP_CodeSniffer\Standards\Generic\Sniffs\Files\OneTraitPerFileSniff: ~
    PHP_CodeSniffer\Standards\Generic\Sniffs\Formatting\SpaceAfterCastSniff: ~
    PHP_CodeSniffer\Standards\Generic\Sniffs\PHP\ForbiddenFunctionsSniff:
        forbiddenFunctions:
            var_dump: null
            dump: null
            require: null
            include: null
            include_once: null
            phpinfo: null
            eval: null
            printf: null
    PHP_CodeSniffer\Standards\Squiz\Sniffs\Arrays\ArrayBracketSpacingSniff: ~
    PHP_CodeSniffer\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff: ~
    PHP_CodeSniffer\Standards\Squiz\Sniffs\Classes\SelfMemberReferenceSniff: ~
    PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\DocCommentAlignmentSniff: ~
    PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\EmptyCatchCommentSniff: ~
    PHP_CodeSniffer\Standards\Squiz\Sniffs\Operators\IncrementDecrementUsageSniff: ~
    PHP_CodeSniffer\Standards\Squiz\Sniffs\Scope\MemberVarScopeSniff: ~
    PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\CastSpacingSniff: ~
    PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\LanguageConstructSpacingSniff: ~
    PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\LogicalOperatorSpacingSniff: ~
    PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\OperatorSpacingSniff:
        ignoreNewlines: true
    PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\ScopeKeywordSpacingSniff: ~
    PHP_CodeSniffer\Standards\Squiz\Sniffs\WhiteSpace\SemicolonSpacingSniff: ~

    PhpCsFixer\Fixer\ClassNotation\ProtectedToPrivateFixer: ~
    PhpCsFixer\Fixer\ControlStructure\NoUnneededControlParenthesesFixer: ~
    PhpCsFixer\Fixer\ControlStructure\NoUnneededCurlyBracesFixer: ~
    PhpCsFixer\Fixer\ReturnNotation\ReturnAssignmentFixer: ~
    PhpCsFixer\Fixer\Alias\MbStrFunctionsFixer: ~
    PhpCsFixer\Fixer\Alias\NoAliasFunctionsFixer: ~
    PhpCsFixer\Fixer\Alias\RandomApiMigrationFixer: ~
    PhpCsFixer\Fixer\ArrayNotation\ArraySyntaxFixer:
        syntax: short
    PhpCsFixer\Fixer\ArrayNotation\NormalizeIndexBraceFixer: ~
    PhpCsFixer\Fixer\ArrayNotation\NoTrailingCommaInSinglelineArrayFixer: ~
    PhpCsFixer\Fixer\ArrayNotation\TrailingCommaInMultilineArrayFixer: ~
    PhpCsFixer\Fixer\ArrayNotation\TrimArraySpacesFixer: ~
    PhpCsFixer\Fixer\ArrayNotation\WhitespaceAfterCommaInArrayFixer: ~
    PhpCsFixer\Fixer\Basic\BracesFixer:
        allow_single_line_closure: true
    PhpCsFixer\Fixer\Basic\Psr4Fixer: ~
    PhpCsFixer\Fixer\Casing\NativeFunctionCasingFixer: ~
    PhpCsFixer\Fixer\CastNotation\LowercaseCastFixer: ~
    PhpCsFixer\Fixer\CastNotation\ShortScalarCastFixer: ~
    PhpCsFixer\Fixer\ClassNotation\NoBlankLinesAfterClassOpeningFixer: ~
    PhpCsFixer\Fixer\ClassNotation\VisibilityRequiredFixer: ~
    PhpCsFixer\Fixer\Comment\NoEmptyCommentFixer: ~
    PhpCsFixer\Fixer\ControlStructure\NoUselessElseFixer: ~
    PhpCsFixer\Fixer\FunctionNotation\FunctionTypehintSpaceFixer: ~
    PhpCsFixer\Fixer\FunctionNotation\NoUnreachableDefaultArgumentValueFixer: ~
    PhpCsFixer\Fixer\FunctionNotation\ReturnTypeDeclarationFixer: ~
    PhpCsFixer\Fixer\Import\NoLeadingImportSlashFixer: ~
    PhpCsFixer\Fixer\Import\NoUnusedImportsFixer:
    PhpCsFixer\Fixer\Import\OrderedImportsFixer: ~
    PhpCsFixer\Fixer\LanguageConstruct\DeclareEqualNormalizeFixer: ~
    PhpCsFixer\Fixer\NamespaceNotation\NoLeadingNamespaceWhitespaceFixer: ~
    PhpCsFixer\Fixer\NamespaceNotation\SingleBlankLineBeforeNamespaceFixer: ~
    PhpCsFixer\Fixer\Operator\BinaryOperatorSpacesFixer:
        operators:
          '=': align_single_space_minimal
          '=>': align_single_space_minimal
    PhpCsFixer\Fixer\Operator\ConcatSpaceFixer:
        spacing: one
    PhpCsFixer\Fixer\Operator\NewWithBracesFixer: ~
    PhpCsFixer\Fixer\Operator\ObjectOperatorWithoutWhitespaceFixer: ~
    PhpCsFixer\Fixer\Operator\StandardizeNotEqualsFixer: ~
    PhpCsFixer\Fixer\Operator\TernaryOperatorSpacesFixer: ~
    PhpCsFixer\Fixer\Operator\TernaryToNullCoalescingFixer: ~
    PhpCsFixer\Fixer\Operator\UnaryOperatorSpacesFixer: ~
    PhpCsFixer\Fixer\Phpdoc\NoBlankLinesAfterPhpdocFixer: ~
    PhpCsFixer\Fixer\Phpdoc\NoEmptyPhpdocFixer: ~
    PhpCsFixer\Fixer\Phpdoc\PhpdocAddMissingParamAnnotationFixer: ~
    PhpCsFixer\Fixer\Phpdoc\PhpdocIndentFixer: ~
    PhpCsFixer\Fixer\Phpdoc\PhpdocNoAccessFixer: ~
    PhpCsFixer\Fixer\Phpdoc\PhpdocNoEmptyReturnFixer: ~
    PhpCsFixer\Fixer\Phpdoc\PhpdocNoPackageFixer: ~
    PhpCsFixer\Fixer\Phpdoc\PhpdocOrderFixer: ~
    PhpCsFixer\Fixer\Phpdoc\PhpdocReturnSelfReferenceFixer: ~
    PhpCsFixer\Fixer\Phpdoc\PhpdocScalarFixer: ~
    PhpCsFixer\Fixer\Phpdoc\PhpdocSingleLineVarSpacingFixer: ~
    PhpCsFixer\Fixer\Phpdoc\PhpdocTrimFixer: ~
    PhpCsFixer\Fixer\Phpdoc\PhpdocTypesFixer: ~
    PhpCsFixer\Fixer\PhpTag\FullOpeningTagFixer: ~
    PhpCsFixer\Fixer\ReturnNotation\NoUselessReturnFixer: ~
    PhpCsFixer\Fixer\Semicolon\NoEmptyStatementFixer: ~
    PhpCsFixer\Fixer\Semicolon\NoSinglelineWhitespaceBeforeSemicolonsFixer: ~
    PhpCsFixer\Fixer\Semicolon\SpaceAfterSemicolonFixer: ~
    PhpCsFixer\Fixer\StringNotation\SingleQuoteFixer: ~
    PhpCsFixer\Fixer\Whitespace\ArrayIndentationFixer: ~
    PhpCsFixer\Fixer\Whitespace\BlankLineBeforeStatementFixer:
        statements:
            - break
            - continue
            - return
            - try
    PhpCsFixer\Fixer\Whitespace\CompactNullableTypehintFixer: ~
    PhpCsFixer\Fixer\Whitespace\NoExtraBlankLinesFixer:
        tokens:
            - break
            - continue
            - curly_brace_block
            - extra
            - parenthesis_brace_block
            - return
            - square_brace_block
            - throw
            - use
            - use_trait
    PhpCsFixer\Fixer\Whitespace\NoWhitespaceInBlankLineFixer: ~
    Symplify\CodingStandard\Sniffs\Naming\TraitNameSniff: ~

parameters:
    skip:
         # We allow empty catch statements (but they must have comment - see EmptyCatchCommentSniff)
        PHP_CodeSniffer\Standards\Generic\Sniffs\CodeAnalysis\EmptyStatementSniff.DetectedCatch: ~

         # Skip unwanted rules from DocCommentSniff
        PHP_CodeSniffer\Standards\Generic\Sniffs\Commenting\DocCommentSniff.ContentAfterOpen: ~
        PHP_CodeSniffer\Standards\Generic\Sniffs\Commenting\DocCommentSniff.ContentBeforeClose: ~
        PHP_CodeSniffer\Standards\Generic\Sniffs\Commenting\DocCommentSniff.MissingShort: ~
        PHP_CodeSniffer\Standards\Generic\Sniffs\Commenting\DocCommentSniff.NonParamGroup: ~
        PHP_CodeSniffer\Standards\Generic\Sniffs\Commenting\DocCommentSniff.ParamGroup: ~
        PHP_CodeSniffer\Standards\Generic\Sniffs\Commenting\DocCommentSniff.ParamNotFirst: ~
        PHP_CodeSniffer\Standards\Generic\Sniffs\Commenting\DocCommentSniff.SpacingBeforeTags: ~
        PHP_CodeSniffer\Standards\Generic\Sniffs\Commenting\DocCommentSniff.TagValueIndent: ~
        PHP_CodeSniffer\Standards\Generic\Sniffs\Commenting\DocCommentSniff.LongNotCapital: ~

        # Skip unwanted rules from ArrayDeclarationSniff
        PHP_CodeSniffer\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.CloseBraceNotAligned: ~
        PHP_CodeSniffer\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.DoubleArrowNotAligned: ~
        PHP_CodeSniffer\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.KeyNotAligned: ~
        PHP_CodeSniffer\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.MultiLineNotAllowed: ~
        PHP_CodeSniffer\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.KeySpecified: ~
        PHP_CodeSniffer\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.SingleLineNotAllowed: ~
        PHP_CodeSniffer\Standards\Squiz\Sniffs\Arrays\ArrayDeclarationSniff.ValueNotAligned: ~

         # There could be more than one space after star (eg. in Doctrine annotations)
        PHP_CodeSniffer\Standards\Squiz\Sniffs\Commenting\DocCommentAlignmentSniff.SpaceAfterStar: ~
